%% Práctica 03: Señales en tiempo discreto
%
% *Intituto Politécnico Nacional*
%
% *Unidad Profesional Interdisciplinaria en Ingeniería y Tecnologías Avanzadas*
%
% *Análisis de Señales y Sistemas*
%
% *Grupo: 2MV1*
%
% *Alumnos:*
% 
% * Carmona Bellido Marco Tulio
%
% * Ordorica Muñoz Leonardo Antonio
%
%% Introducción
% Al trabajar con señales en tiempo discreto se complica un poco al momento
% de realizar operaciones con dichas señales, debido a que estan definidas
% solo para numeros enteros.
% Por lo tanto al realizar un escalamiento horizontal, si este queda
% definido para un numero decimal, se perderian los datos que quedaban
% contenidos en esos puntos.
%
% Si la operación realizada es una compresión y se pierden datos de los
% extremos, se llama Decimation.
%
% Si la operación realizada es una expansión se a la perdida de datos se le
% llama Interpolation.
%
% A los puntos donde pudieran faltar esos datos se les puede considerar que
% son cero, que no estan definidos o se le puede hacer una interpolación.
%
% La interpolación consiste en tomar la altura anterior al punto más la
% altura siguiente al punto y dividir esa suma entre 2. Asi se estaría
% definiendo esa altura con ese valor.
% 
%% Objetivos
% * Manipulación básica de MATLAB
% * Gráficas de señales reales y complejas discretas
% * Transformación de señales discretas (escalamientos y traslaciones)
% * Calculo de energía y potencia de señales discretas
%% Desarrollo
% 
%% Problema 1
% Se crea una funcion $f:N \rightarrow R$ la funcion la llamaremos _fun1_ y
% regreseara la evaluación de $f[n]=r^ncos[\Omega n]+ r^nsen(\Omega n)j$,
% para que se pueda ejecutar se le tendra que enviar el valor de _r_ y de
% $\Omega$ asi como el funto en que se desea evaliar la funcion que en este
% caso será $n_0$.
%
%   function [a] = fun1(r,w,n0)
%   f = @(n) (r^n)*cos(w*n) + (r^n)*sin(w*n)*i;
%   a = f(n0);
%   end
%% Problema 2
% A continuacuón crearemos una funcion de matlab _fun2_ que grafique en tiempo
% discreto la siguiente función $x[n]=na^nu[n]$ para $n= -2,...,10$ y con
% $a=0.9$. A la funcion solo se le enviaran los parametros pues estara
% previamente definida para evaluar la funcion antes mensionada.
%
n = -2:10;
a = 0.9;
fun2(n,a)
%% Problema 3
%
%% Problema 4
% Funcion que calcula la energia de una señal discreta pasandole como
% parámetros un vector de tiempo y las alturas asignadas a cada entero del
% vector de tiempo e imprime la gráfica de la señal.
%%
%   function [ex] = energiadis(tiempo,alturas) % La funcion energia pide un limite inferior y un limite superior
%   ex=sum(alturas.*alturas); % Se usa la funcion sum para sumar todas las alturas de la señal
%   stem(tiempo,alturas)
%   xlabel('n'); ylabel('x[n]'); 
%   grid on;
%   title('Gráfica de la señal ingresada');
%   axis([min(tiempo)-2 max(tiempo)+2 min(alturas)-2 max(alturas)+2]);
%   ax = gca;
%   ax.XAxisLocation = 'origin';
%   ax.YAxisLocation = 'origin';
%   end
%
%% Problema 5
% Resuelva el problema 3.1.1 c) de Lathi, aplicando su función anterior
% El inciso c) del problema 3.1.1 de Lathi tiene una señal definida de -3 a
% 3, para todas los demas enteros es cero.
%
% A esos tiempos le corresponden las alturas definidas por la función
% x[n]=3n;
%
% A continuación se utiliza la función energiadis con esos datos:
%
%%
n=-3:3;
x=3*n;
energiadis(n,x)
%%
% Como podemos observar la función energiadis trabaja adecuadamente.
%% Problema 6
%% Referencias
% # Martínez   R.,Senales   y   Sistemas:   Una   perspectiva. Recuperado   19   marzo,   2019,   de <http://rafneta.github.io http://rafneta.github.io>
% # Lathi, B. P.. (2005). Linear Systems and Signals. New York: Oxford University Press, Inc.
% # Martínez, R. [Mate y así]. (2018 Agosto 17). Escalamiento horizontal de señales en tiempo discreto (6)
% [Video]. Recuperado de <https://www.youtube.com/watch?v=lpFU5D7oY1w https://www.youtube.com/watch?v=lpFU5D7oY1w>
